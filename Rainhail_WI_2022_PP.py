import pandas as pd
import json
import couchdb

pd.options.mode.chained_assignment = None  # for raw-dataframe manipulation

PERCENTAGES_VALUES = ["50", "55", "60", "65", "70", "75", "80", "85"]

def generate_json(county, form, a, s) -> dict:
    """
    Final database requieres specific object composition in certain JSON value.
    This JSON is composed by various data according to the context. The crop
    categories are fixed variables for WI case. A dict is returned, JSON is
    generated in preproccesing of the database

            Parameters:
                    county (string): County specific name
                    form (string): Form pattern
                    a (string): Crop type value for A category
                    s (string): Crop type value for S category

            Returns:
                    as_json (dict): JSON-like value
    """

    as_json = {
        "_id": f"WI_{county.upper()}_RH_{form}_OTHER_OTHER_2022",
        "state": "WI",
        "aip": "RH",
        "form": f"{form}",
        "county": f"{county.upper()}",
        "crop_types": {
            "A": ["barley", "corn", "hay", "mint", "sugar beets", "wheat", "rye"],
            "S": ["soybeans"],
        },
        "crops": {"A": f"{str(a)}", "S": f"{str(s)}"},
    }
    return as_json


def generate_form(production_level, percentage) -> str:
    """
    A form consisted of PXX-XX patter is generated by a production level
    parameter and a given percentaje

            Parameters:
                    production_level (string): Given value from original data
                    percentage (string): Specific product value

            Returns:
                    form (string): Valid pattern for database integration
    """
    return f"P{production_level}-{percentage}"


def main() -> None: # 2880 documents
    # # dev db
    # couch = couchdb.Server('http://hailUser:hailpro1995@52.162.35.208:5984/')
    # db = couch["hpdb-dev"]
    # # test db
    # couchT = couchdb.Server('http://test-db-user:tst-db-194581@52.159.92.148:5984/')
    # dbt = couchT["hpdb-tst"]
    # # prod db
    # couchP = couchdb.Server('http://prod-db-user:prd-db-9185601@52.159.103.140:5984/')
    # dbp = couchP["hpdb-prd"]

    dataframe = pd.read_excel(r"D:\Capmation\AIP\Rainhail\Rainhail\WI\excel_cleaned_data.xls", sheet_name="A")
    print("NaNs o Nones: ", dataframe.isnull().values.any())
    print("Zeros: ", (dataframe == 0).sum())

    rows, _ = dataframe.shape
    jsons = []
    counter = 0
    for row in range(0, rows):
        county = dataframe.iloc[row]['County']
        production_level = str(dataframe.iloc[row]['Modifier']).replace('%', '').strip()
        for index in range(0, len(PERCENTAGES_VALUES)):
            a = str(round(dataframe.iloc[row]['cw' + str(index)], 2))
            s = str(round(dataframe.iloc[row]['s' + str(index)], 2))
            percentage = PERCENTAGES_VALUES[index]
            form = generate_form(production_level, percentage)
            json_ = generate_json(county, form, a, s)
            print(counter,json_)
            # db.save(json_)
            jsons.append(json_)
            counter += 1


    output_values = json.dumps(jsons, indent=2)
    # generating file from proccessed data
    data = open('wi_rainhail.json', 'wt')
    data.write(output_values)
    data.close()



if __name__ == "__main__":
    main()
